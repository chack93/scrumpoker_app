paths:
  /session:
    post:
      description: Creates a new session with random joinCode, session will be destroyed after 48h of inactivity. (no estimation or update to the session settings)
      operationId: createSession
      requestBody:
        description: Details about new session to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionNew'
      responses:
        '200':
          description: session response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '400':
          description: invalid request body
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/Error'
  /session/{id}:
    get:
      description: Read session of id
      operationId: readSession
      parameters:
        - name: id
          in: path
          description: id of session
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: session response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '404':
          description: not found 
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/Error'
    put:
      description: update session of id, can only be done by the session owner
      operationId: updateSession
      parameters:
        - name: id
          in: path
          description: id of session
          required: true
          schema:
            type: string
            format: uuid
        - name: clientId
          in: query
          description: owner client id 
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Session to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionNew'
      responses:
        '204':
          description: session updated
        '400':
          description: invalid request body
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/Error'
        '404':
          description: not found 
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/Error'
  /session/join/{joinCode}:
    get:
      description: Read session identified by joinCode
      operationId: readSessionJoinCode
      parameters:
        - name: joinCode
          in: path
          description: joinCode of session
          required: true
          schema:
            type: string
      responses:
        '200':
          description: session response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '404':
          description: not found 
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/Error'
components:
  schemas:
    Session:
      allOf:
        - $ref: '../common/common.yaml#/components/schemas/BaseModel'
        - $ref: '#/components/schemas/SessionNew'
        - type: object
          required:
          - id
          properties:
            joinCode:
              type: string
    SessionNew:
      allOf:
        - type: object
          properties:
            description:
              type: string
            ownerClientId:
              type: string
              format: uuid
            cardSelectionList:
              type: string
            gameStatus:
              type: string
              description: |
                states
                * init: new game started, cards hidden
                * reveal: game finished, cards are visible & current game is written to history
